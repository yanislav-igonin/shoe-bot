generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model NewUser {
  id           Int            @id @default(autoincrement())
  username     String?
  firstName    String?
  lastName     String?
  languageCode String?
  tgId         String         @unique
  isAllowed    Boolean        @default(false)
  createdAt    DateTime       @default(now())
  messages     Message[]
  UserSettings UserSettings[]

  @@map("new_users")
}

enum ChatType {
  private
  group
  supergroup
  channel
}

model NewChat {
  id        Int         @id @default(autoincrement())
  name      String
  type      ChatType
  tgId      String
  createdAt DateTime    @default(now())
  dialogs   NewDialog[]

  @@map("new_chats")
}

model NewDialog {
  id                     Int       @id @default(autoincrement())
  createdAt              DateTime  @default(now())
  chatId                 Int
  chat                   NewChat   @relation(fields: [chatId], references: [id])
  messages               Message[]
  isViolatesOpenAiPolicy Boolean   @default(false)

  @@map("new_dialogs")
}

enum MessageType {
  text
  image
  voice
}

model Message {
  id          Int         @id @default(autoincrement())
  text        String?
  type        MessageType
  userId      Int
  user        NewUser     @relation(fields: [userId], references: [id])
  dialogId    Int?
  dialog      NewDialog?  @relation(fields: [dialogId], references: [id])
  tgPhotoId   String?
  tgMessageId String
  tgVoiceId   String?
  replyToId   Int?
  replyTo     Message?    @relation("Replies", fields: [replyToId], references: [id])
  replies     Message[]   @relation("Replies")
  createdAt   DateTime    @default(now())

  @@map("messages")
}

model BotTemplate {
  id           Int            @id @default(autoincrement())
  name         String
  systemPrompt String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  UserSettings UserSettings[]

  @@map("bot_templates")
}

model UserSettings {
  id            Int         @id @default(autoincrement())
  userId        Int
  user          NewUser     @relation(fields: [userId], references: [id])
  botTemplateId Int
  botTemplate   BotTemplate @relation(fields: [botTemplateId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("user_settings")
}
